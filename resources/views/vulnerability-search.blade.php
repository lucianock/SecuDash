<x-layouts.app>
    <div class="min-h-screen bg-gradient-to-br from-neutral-900 to-neutral-800">
        <div class="max-w-[90rem] mx-auto p-6">
            <!-- Header -->
            <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl shadow-2xl border border-neutral-700/50 mb-6">
                <div class="p-8">
                    <h1 class="text-3xl font-bold bg-gradient-to-r from-green-500 to-green-300 bg-clip-text text-transparent">CVE Vulnerability Search</h1>
                    <p class="text-neutral-400 mt-2">Search the National Vulnerability Database (NVD) for real-time CVE information</p>
                </div>
            </div>

            <!-- Search Form -->
            <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl shadow-2xl border border-neutral-700/50 mb-6">
                <div class="p-8">
                    <form id="searchForm" class="space-y-6">
                        <div class="grid md:grid-cols-2 gap-6">
                            <!-- Search Query -->
                            <div class="md:col-span-2">
                                <label for="searchQuery" class="block text-sm font-medium text-neutral-300 mb-2">Search Query</label>
                                <div class="relative">
                                    <input type="text" id="searchQuery" name="query" required
                                        class="w-full px-4 py-3 pl-12 bg-neutral-900/50 border border-neutral-700 rounded-xl text-white focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                                        placeholder="Search for vulnerabilities (e.g., 'sql injection', 'windows', 'apache')">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <svg class="h-5 w-5 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                        </svg>
                                    </div>
                                </div>
                            </div>

                            <!-- Filters -->
                            <div>
                                <label for="severity" class="block text-sm font-medium text-neutral-300 mb-2">Severity</label>
                                <select id="severity" name="severity"
                                    class="w-full px-4 py-3 bg-neutral-900/50 border border-neutral-700 rounded-xl text-white focus:ring-2 focus:ring-green-500 focus:border-transparent appearance-none transition-all duration-200">
                                    <option value="">All Severities</option>
                                    <option value="critical">Critical</option>
                                    <option value="high">High</option>
                                    <option value="medium">Medium</option>
                                    <option value="low">Low</option>
                                </select>
                            </div>

                            <div>
                                <label for="year" class="block text-sm font-medium text-neutral-300 mb-2">Year</label>
                                <select id="year" name="year"
                                    class="w-full px-4 py-3 bg-neutral-900/50 border border-neutral-700 rounded-xl text-white focus:ring-2 focus:ring-green-500 focus:border-transparent appearance-none transition-all duration-200">
                                    <option value="">All Years</option>
                                    @for($year = date('Y'); $year >= 1999; $year--)
                                        <option value="{{ $year }}">{{ $year }}</option>
                                    @endfor
                                </select>
                            </div>

                            <div>
                                <label for="vendor" class="block text-sm font-medium text-neutral-300 mb-2">Vendor</label>
                                <input type="text" id="vendor" name="vendor"
                                    class="w-full px-4 py-3 bg-neutral-900/50 border border-neutral-700 rounded-xl text-white focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                                    placeholder="e.g., Microsoft, Oracle, Adobe">
                            </div>

                            <div>
                                <label for="product" class="block text-sm font-medium text-neutral-300 mb-2">Product</label>
                                <input type="text" id="product" name="product"
                                    class="w-full px-4 py-3 bg-neutral-900/50 border border-neutral-700 rounded-xl text-white focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                                    placeholder="e.g., Windows, Java, Chrome">
                            </div>
                        </div>

                        <!-- Search Button -->
                        <div class="flex justify-center">
                            <button type="submit" id="searchButton"
                                class="px-8 py-3 bg-green-600 hover:bg-green-700 text-white rounded-xl transition-all duration-200 flex items-center justify-center font-medium shadow-lg shadow-green-500/20 hover:shadow-green-600/30">
                                <span id="buttonText">Search Vulnerabilities</span>
                                <svg id="loadingIcon" class="hidden animate-spin ml-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Statistics Dashboard -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
                <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl p-6 border border-neutral-700/50">
                    <div class="flex items-center">
                        <div class="p-2 bg-red-500/10 rounded-lg">
                            <svg class="h-6 w-6 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-neutral-400">Critical CVEs</p>
                            <p id="criticalCount" class="text-2xl font-bold text-red-500">-</p>
                        </div>
                    </div>
                </div>

                <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl p-6 border border-neutral-700/50">
                    <div class="flex items-center">
                        <div class="p-2 bg-yellow-500/10 rounded-lg">
                            <svg class="h-6 w-6 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-neutral-400">High CVEs</p>
                            <p id="highCount" class="text-2xl font-bold text-yellow-500">-</p>
                        </div>
                    </div>
                </div>

                <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl p-6 border border-neutral-700/50">
                    <div class="flex items-center">
                        <div class="p-2 bg-blue-500/10 rounded-lg">
                            <svg class="h-6 w-6 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-neutral-400">This Year</p>
                            <p id="yearCount" class="text-2xl font-bold text-blue-500">-</p>
                        </div>
                    </div>
                </div>

                <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl p-6 border border-neutral-700/50">
                    <div class="flex items-center">
                        <div class="p-2 bg-green-500/10 rounded-lg">
                            <svg class="h-6 w-6 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-neutral-400">Total Results</p>
                            <p id="totalResults" class="text-2xl font-bold text-green-500">-</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Results Section -->
            <div id="resultsSection" class="hidden">
                <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl shadow-2xl border border-neutral-700/50">
                    <div class="p-6 border-b border-neutral-700/50">
                        <div class="flex items-center justify-between">
                            <h2 class="text-xl font-semibold text-white">Search Results</h2>
                            <div class="flex items-center space-x-4">
                                <span id="resultsCount" class="text-sm text-neutral-400"></span>
                                <button id="exportResults" class="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-all duration-200 text-sm">
                                    Export Results
                                </button>
                            </div>
                        </div>
                    </div>

                    <div id="resultsContainer" class="p-6">
                        <!-- Results will be populated here -->
                    </div>
                </div>
            </div>

            <!-- No Results Message -->
            <div id="noResults" class="hidden">
                <div class="bg-neutral-800/50 backdrop-blur-xl rounded-3xl p-8 text-center border border-neutral-700/50">
                    <svg class="mx-auto h-12 w-12 text-neutral-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33"></path>
                    </svg>
                    <h3 class="text-lg font-medium text-white mb-2">No vulnerabilities found</h3>
                    <p class="text-neutral-400">Try adjusting your search criteria or use different keywords.</p>
                </div>
            </div>

            <!-- Error Message -->
            <div id="errorMessage" class="hidden">
                <div class="bg-red-900/20 backdrop-blur-xl rounded-3xl p-8 text-center border border-red-700/50">
                    <svg class="mx-auto h-12 w-12 text-red-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <h3 class="text-lg font-medium text-red-400 mb-2">Search Error</h3>
                    <p id="errorText" class="text-red-300">An error occurred while searching. Please try again.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Vulnerability Template -->
    <template id="vulnerabilityTemplate">
        <div class="bg-neutral-900/50 rounded-2xl p-6 border border-neutral-700/50 mb-4 hover:border-green-500/50 transition-all duration-200">
            <div class="flex items-start justify-between mb-4">
                <div class="flex-1">
                    <div class="flex items-center space-x-3 mb-2">
                        <h3 class="text-lg font-semibold text-white vulnerability-title"></h3>
                        <span class="vulnerability-severity px-3 py-1 rounded-full text-xs font-medium"></span>
                    </div>
                    <p class="text-neutral-400 text-sm vulnerability-description mb-3"></p>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                        <div>
                            <span class="text-neutral-500">Vendor:</span>
                            <span class="text-white vulnerability-vendor ml-1"></span>
                        </div>
                        <div>
                            <span class="text-neutral-500">Product:</span>
                            <span class="text-white vulnerability-product ml-1"></span>
                        </div>
                        <div>
                            <span class="text-neutral-500">CVSS Score:</span>
                            <span class="text-white vulnerability-cvss ml-1"></span>
                        </div>
                        <div>
                            <span class="text-neutral-500">Published:</span>
                            <span class="text-white vulnerability-date ml-1"></span>
                        </div>
                    </div>
                </div>
                <div class="flex flex-col space-y-2">
                    <button class="vulnerability-details-btn px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-all duration-200 text-sm">
                        Details
                    </button>
                    <a class="vulnerability-nvd-link px-4 py-2 bg-neutral-600 hover:bg-neutral-700 text-white rounded-lg transition-all duration-200 text-sm text-center" target="_blank">
                        View on NVD
                    </a>
                </div>
            </div>
            
            <!-- Tags -->
            <div class="vulnerability-tags flex flex-wrap gap-2 mb-4">
                <!-- Tags will be populated here -->
            </div>

            <!-- Additional Info -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                <div class="flex items-center">
                    <span class="text-neutral-500">Patch Available:</span>
                    <span class="vulnerability-patch ml-2 px-2 py-1 rounded text-xs"></span>
                </div>
                <div class="flex items-center">
                    <span class="text-neutral-500">Exploit Available:</span>
                    <span class="vulnerability-exploit ml-2 px-2 py-1 rounded text-xs"></span>
                </div>
                <div class="flex items-center">
                    <span class="text-neutral-500">CVE ID:</span>
                    <span class="text-white vulnerability-cve-id ml-1 font-mono"></span>
                </div>
            </div>
        </div>
    </template>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchForm = document.getElementById('searchForm');
            const searchButton = document.getElementById('searchButton');
            const buttonText = document.getElementById('buttonText');
            const loadingIcon = document.getElementById('loadingIcon');
            const resultsSection = document.getElementById('resultsSection');
            const noResults = document.getElementById('noResults');
            const errorMessage = document.getElementById('errorMessage');
            const resultsContainer = document.getElementById('resultsContainer');
            const resultsCount = document.getElementById('resultsCount');
            const totalResults = document.getElementById('totalResults');
            const criticalCount = document.getElementById('criticalCount');
            const highCount = document.getElementById('highCount');
            const yearCount = document.getElementById('yearCount');

            // Load initial statistics
            loadStatistics();

            searchForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Show loading state
                buttonText.textContent = 'Searching...';
                loadingIcon.classList.remove('hidden');
                searchButton.disabled = true;
                
                // Hide previous results
                resultsSection.classList.add('hidden');
                noResults.classList.add('hidden');
                errorMessage.classList.add('hidden');

                try {
                    const formData = new FormData(searchForm);
                    const searchParams = new URLSearchParams();
                    
                    for (let [key, value] of formData.entries()) {
                        if (value) {
                            searchParams.append(key, value);
                        }
                    }

                    const response = await fetch(`/api/vulnerabilities?${searchParams.toString()}`, {
                        headers: {
                            'Accept': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const data = await response.json();
                    
                    if (data.note) {
                        console.log('Note:', data.note);
                    }

                    displayResults(data);

                } catch (error) {
                    console.error('Search error:', error);
                    showError('An error occurred while searching. Please try again.');
                } finally {
                    // Reset button state
                    buttonText.textContent = 'Search Vulnerabilities';
                    loadingIcon.classList.add('hidden');
                    searchButton.disabled = false;
                }
            });

            function displayResults(data) {
                const results = data.results || [];
                const total = data.total_results || 0;

                // Update statistics
                totalResults.textContent = total.toLocaleString();
                resultsCount.textContent = `${results.length} of ${total.toLocaleString()} results`;

                if (total === 0) {
                    noResults.classList.remove('hidden');
                    return;
                }

                // Clear previous results
                resultsContainer.innerHTML = '';

                // Count severities
                const severityCounts = { critical: 0, high: 0, medium: 0, low: 0 };
                results.forEach(result => {
                    if (severityCounts.hasOwnProperty(result.severity)) {
                        severityCounts[result.severity]++;
                    }
                });

                // Update severity counts
                criticalCount.textContent = severityCounts.critical;
                highCount.textContent = severityCounts.high;

                // Display results
                results.forEach(result => {
                    const template = document.getElementById('vulnerabilityTemplate');
                    const clone = template.content.cloneNode(true);

                    // Populate basic info
                    clone.querySelector('.vulnerability-title').textContent = result.title;
                    clone.querySelector('.vulnerability-description').textContent = result.description;
                    clone.querySelector('.vulnerability-vendor').textContent = result.vendor || 'Unknown';
                    clone.querySelector('.vulnerability-product').textContent = result.product || 'Unknown';
                    clone.querySelector('.vulnerability-cvss').textContent = result.cvss_score || 'N/A';
                    clone.querySelector('.vulnerability-date').textContent = formatDate(result.published_date);
                    clone.querySelector('.vulnerability-cve-id').textContent = result.cve_id;

                    // Set severity badge
                    const severityBadge = clone.querySelector('.vulnerability-severity');
                    severityBadge.textContent = result.severity.toUpperCase();
                    setSeverityBadgeStyle(severityBadge, result.severity);

                    // Set patch and exploit availability
                    const patchBadge = clone.querySelector('.vulnerability-patch');
                    const exploitBadge = clone.querySelector('.vulnerability-exploit');
                    
                    patchBadge.textContent = result.patch_available ? 'Yes' : 'No';
                    patchBadge.className = `ml-2 px-2 py-1 rounded text-xs ${result.patch_available ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'}`;
                    
                    exploitBadge.textContent = result.exploit_available ? 'Yes' : 'No';
                    exploitBadge.className = `ml-2 px-2 py-1 rounded text-xs ${result.exploit_available ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400'}`;

                    // Set NVD link
                    const nvdLink = clone.querySelector('.vulnerability-nvd-link');
                    nvdLink.href = `https://nvd.nist.gov/vuln/detail/${result.cve_id}`;

                    // Add tags
                    const tagsContainer = clone.querySelector('.vulnerability-tags');
                    if (result.tags && result.tags.length > 0) {
                        result.tags.forEach(tag => {
                            const tagSpan = document.createElement('span');
                            tagSpan.className = 'px-2 py-1 bg-neutral-700 text-neutral-300 rounded text-xs';
                            tagSpan.textContent = tag;
                            tagsContainer.appendChild(tagSpan);
                        });
                    }

                    // Add click handlers
                    const detailsBtn = clone.querySelector('.vulnerability-details-btn');
                    detailsBtn.addEventListener('click', () => showVulnerabilityDetails(result));

                    resultsContainer.appendChild(clone);
                });

                resultsSection.classList.remove('hidden');
            }

            function setSeverityBadgeStyle(badge, severity) {
                badge.className = 'px-3 py-1 rounded-full text-xs font-medium';
                switch (severity) {
                    case 'critical':
                        badge.classList.add('bg-red-500/20', 'text-red-400');
                        break;
                    case 'high':
                        badge.classList.add('bg-orange-500/20', 'text-orange-400');
                        break;
                    case 'medium':
                        badge.classList.add('bg-yellow-500/20', 'text-yellow-400');
                        break;
                    case 'low':
                        badge.classList.add('bg-green-500/20', 'text-green-400');
                        break;
                    default:
                        badge.classList.add('bg-neutral-500/20', 'text-neutral-400');
                }
            }

            function formatDate(dateString) {
                if (!dateString) return 'Unknown';
                const date = new Date(dateString);
                return date.toLocaleDateString();
            }

            function showVulnerabilityDetails(vulnerability) {
                // Create modal or expand details
                const details = `
                    <div class="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
                        <div class="bg-neutral-800 rounded-2xl p-6 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
                            <div class="flex justify-between items-start mb-4">
                                <h2 class="text-2xl font-bold text-white">${vulnerability.title}</h2>
                                <button onclick="this.closest('.fixed').remove()" class="text-neutral-400 hover:text-white">
                                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                </button>
                            </div>
                            
                            <div class="space-y-4">
                                <div>
                                    <h3 class="text-lg font-semibold text-white mb-2">Description</h3>
                                    <p class="text-neutral-300">${vulnerability.description}</p>
                                </div>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <h3 class="text-lg font-semibold text-white mb-2">Technical Details</h3>
                                        <div class="space-y-2 text-sm">
                                            <div><span class="text-neutral-500">CVE ID:</span> <span class="text-white font-mono">${vulnerability.cve_id}</span></div>
                                            <div><span class="text-neutral-500">CVSS Score:</span> <span class="text-white">${vulnerability.cvss_score}</span></div>
                                            <div><span class="text-neutral-500">CVSS Vector:</span> <span class="text-white font-mono text-xs">${vulnerability.cvss_vector || 'N/A'}</span></div>
                                            <div><span class="text-neutral-500">Published:</span> <span class="text-white">${formatDate(vulnerability.published_date)}</span></div>
                                            <div><span class="text-neutral-500">Updated:</span> <span class="text-white">${formatDate(vulnerability.updated_date)}</span></div>
                                        </div>
                                    </div>
                                    
                                    <div>
                                        <h3 class="text-lg font-semibold text-white mb-2">Affected Systems</h3>
                                        <div class="space-y-2 text-sm">
                                            <div><span class="text-neutral-500">Vendor:</span> <span class="text-white">${vulnerability.vendor || 'Unknown'}</span></div>
                                            <div><span class="text-neutral-500">Product:</span> <span class="text-white">${vulnerability.product || 'Unknown'}</span></div>
                                            <div><span class="text-neutral-500">Version:</span> <span class="text-white">${vulnerability.version || 'Unknown'}</span></div>
                                        </div>
                                    </div>
                                </div>
                                
                                ${vulnerability.references && vulnerability.references.length > 0 ? `
                                <div>
                                    <h3 class="text-lg font-semibold text-white mb-2">References</h3>
                                    <div class="space-y-1">
                                        ${vulnerability.references.map(ref => `
                                            <a href="${ref}" target="_blank" class="block text-blue-400 hover:text-blue-300 text-sm break-all">${ref}</a>
                                        `).join('')}
                                    </div>
                                </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                `;
                
                document.body.insertAdjacentHTML('beforeend', details);
            }

            function showError(message) {
                document.getElementById('errorText').textContent = message;
                errorMessage.classList.remove('hidden');
            }

            async function loadStatistics() {
                try {
                    const response = await fetch('/api/vulnerabilities/statistics');
                    const data = await response.json();
                    
                    yearCount.textContent = data.vulnerabilities_this_year?.toLocaleString() || '-';
                } catch (error) {
                    console.error('Failed to load statistics:', error);
                }
            }

            // Export functionality
            document.getElementById('exportResults').addEventListener('click', function() {
                const results = Array.from(resultsContainer.children).map(result => {
                    return {
                        title: result.querySelector('.vulnerability-title').textContent,
                        cve_id: result.querySelector('.vulnerability-cve-id').textContent,
                        severity: result.querySelector('.vulnerability-severity').textContent,
                        vendor: result.querySelector('.vulnerability-vendor').textContent,
                        product: result.querySelector('.vulnerability-product').textContent,
                        cvss_score: result.querySelector('.vulnerability-cvss').textContent,
                        published_date: result.querySelector('.vulnerability-date').textContent
                    };
                });

                const csv = [
                    ['Title', 'CVE ID', 'Severity', 'Vendor', 'Product', 'CVSS Score', 'Published Date'],
                    ...results.map(r => [r.title, r.cve_id, r.severity, r.vendor, r.product, r.cvss_score, r.published_date])
                ].map(row => row.map(cell => `"${cell}"`).join(',')).join('\n');

                const blob = new Blob([csv], { type: 'text/csv' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'vulnerability-search-results.csv';
                a.click();
                window.URL.revokeObjectURL(url);
            });
        });
    </script>
</x-layouts.app>
